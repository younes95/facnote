security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    # encoder
    encoders:
        App\Entity\Utilisateur:
            algorithm: bcrypt

    providers:
        in_memory: { memory: ~ }
        our_db_provider:
            entity:
                class: App\Entity\Utilisateur
                property: loginUtilisateur
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:   ^/
            http_basic: ~
            provider: our_db_provider
            anonymous: ~
            form_login:
                login_path: connexion
                check_path: connexion
            logout:
                path: /logout
                target: /

    role_hierarchy:
        ROLE_AFFICHAGE: ROLE_USER
        ROLE_EDITION: ROLE_AFFICHAGE
        ROLE_SUPPRESSION: ROLE_EDITION
        ROLE_GERANT:    ROLE_SUPPRESSION
        ROLE_COMPTABLE:    [ROLE_GERANT, ROLE_COMPTABLE_ADMIN]
        ROLE_ADMIN:      ROLE_COMPTABLE
        
        #ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
       # main:
        #    anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/utilisateur, roles: ROLE_USER }
        - { path: ^/societe, roles: ROLE_USER }
        - { path: ^/ecriture, roles: ROLE_USER }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
